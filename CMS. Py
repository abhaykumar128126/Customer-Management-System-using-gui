import tkinter as tk
from tkinter import messagebox

# BLL: Business Logic Layer
id_list = []
name_list = []
age_list = []
mob_list = []

def addCustomer(id, name, age, mob):
    id_list.append(id)
    name_list.append(name)
    age_list.append(age)
    mob_list.append(mob)

def searchCustomer(id):
    try:
        index = id_list.index(id)
        return index
    except ValueError:
        return -1

def deleteCustomer(id):
    i = id_list.index(id)
    id_list.pop(i)
    name_list.pop(i)
    age_list.pop(i)
    mob_list.pop(i)

def modifyCustomer(id, name, age, mob):
    i = id_list.index(id)
    name_list[i] = name
    age_list[i] = age
    mob_list[i] = mob

# PL: Presentation Layer
def showCustomer(i):
    return f"Cust ID: {id_list[i]}, Cust Name: {name_list[i]}, Cust Age: {age_list[i]}, Cust Mob: {mob_list[i]}"

# GUI Application
class CustomerManagementApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Customer Management System")
        self.root.geometry("400x400")

        # Labels and Entries
        self.id_label = tk.Label(root, text="Customer ID")
        self.id_label.pack()
        self.id_entry = tk.Entry(root)
        self.id_entry.pack()

        self.name_label = tk.Label(root, text="Customer Name")
        self.name_label.pack()
        self.name_entry = tk.Entry(root)
        self.name_entry.pack()

        self.age_label = tk.Label(root, text="Customer Age")
        self.age_label.pack()
        self.age_entry = tk.Entry(root)
        self.age_entry.pack()

        self.mob_label = tk.Label(root, text="Customer Mob")
        self.mob_label.pack()
        self.mob_entry = tk.Entry(root)
        self.mob_entry.pack()

        # Buttons
        self.add_button = tk.Button(root, text="Add Customer", command=self.add_customer)
        self.add_button.pack(pady=5)

        self.search_button = tk.Button(root, text="Search Customer", command=self.search_customer)
        self.search_button.pack(pady=5)

        self.delete_button = tk.Button(root, text="Delete Customer", command=self.delete_customer)
        self.delete_button.pack(pady=5)

        self.modify_button = tk.Button(root, text="Modify Customer", command=self.modify_customer)
        self.modify_button.pack(pady=5)

        self.display_button = tk.Button(root, text="Display All Customers", command=self.display_customers)
        self.display_button.pack(pady=5)

        self.output_text = tk.Text(root, height=10, width=50)
        self.output_text.pack(pady=5)

    def add_customer(self):
        id = self.id_entry.get()
        name = self.name_entry.get()
        age = self.age_entry.get()
        mob = self.mob_entry.get()
        addCustomer(id, name, age, mob)
        messagebox.showinfo("Success", "Customer Added Successfully")

    def search_customer(self):
        id = self.id_entry.get()
        index = searchCustomer(id)
        if index != -1:
            customer_info = showCustomer(index)
            self.output_text.delete(1.0, tk.END)
            self.output_text.insert(tk.END, customer_info)
        else:
            messagebox.showerror("Error", "Customer Not Found")

    def delete_customer(self):
        id = self.id_entry.get()
        deleteCustomer(id)
        messagebox.showinfo("Success", "Customer Deleted Successfully")

    def modify_customer(self):
        id = self.id_entry.get()
        name = self.name_entry.get()
        age = self.age_entry.get()
        mob = self.mob_entry.get()
        modifyCustomer(id, name, age, mob)
        messagebox.showinfo("Success", "Customer Modified Successfully")

    def display_customers(self):
        self.output_text.delete(1.0, tk.END)
        for i in range(len(id_list)):
            customer_info = showCustomer(i)
            self.output_text.insert(tk.END, customer_info + "\n")

if __name__ == "__main__":
    root = tk.Tk()
    app = CustomerManagementApp(root)
    root.mainloop()
